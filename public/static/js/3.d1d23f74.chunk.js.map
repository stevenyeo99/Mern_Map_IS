{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","user/pages/Auth.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","props","onCancel","onClear","header","show","footer","onClick","ModalOverlay","content","className","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","console","log","fetch","signal","response","json","responseData","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","target","i","length","source","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","e","_e","f","TypeError","it","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialIsValid","inputState","dispatch","id","onInput","changeHandler","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorMsg","formReducer","formIsValid","inputId","inputs","useForm","initialInputFields","initialFormIsValid","formState","inputData","formValidity","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickRef","fileReader","FileReader","onload","result","readAsDataURL","display","accept","ref","pickedFile","fileIsValid","files","center","src","alt","click","errorText","Auth","authCtx","useContext","AuthContext","email","password","inputHandler","setFormData","isLoginMode","setIsLoginMode","authSubmitHandler","process","JSON","stringify","login","userId","token","formData","FormData","append","name","image","asOverlay","initialValid","disabled","inverse","prevMode"],"mappings":"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","file":"static/js/3.d1d23f74.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport BackDrop from '../UIElements/Backdrop';\r\n\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n\r\n            <form onSubmit={\r\n                props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n            }>\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    { props.children }\r\n                </div>\r\n\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    { props.footer }\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <React.Fragment>\r\n            { props.show && <BackDrop onClick={props.onCancel} /> }\r\n            <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames='modal'>\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Modal;","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeHttpRequest = useRef([]);\r\n\r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            setIsLoading(true);\r\n\r\n            const httpAbortCtrl = new AbortController();\r\n            activeHttpRequest.current.push(httpAbortCtrl);\r\n\r\n            console.log(activeHttpRequest);\r\n            console.log(activeHttpRequest.current);\r\n            console.log(body);\r\n\r\n            const response = await fetch(url, {\r\n                method,\r\n                headers,\r\n                body,\r\n                signal: httpAbortCtrl.signal\r\n            });\r\n\r\n            const responseData = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n\r\n            return responseData;\r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            setError(err.message || 'Error occur during call API.');\r\n            throw new Error(err.message);\r\n        }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequest.current.forEach(abortCtrl => {\r\n                abortCtrl.abort();\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return {\r\n        isLoading,\r\n        error,\r\n        sendRequest,\r\n        clearError\r\n    }\r\n};","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\n\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return { ...state, value: action.val, isValid: validate(action.val, action.validators) };\r\n        case 'TOUCH':\r\n            return {...state, isTouched: true }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst Input = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.initialValue || '', \r\n        isValid: props.initialIsValid || false, \r\n        isTouched: false\r\n    });\r\n\r\n    const { id, onInput} = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid);\r\n    }, [onInput, id, value, isValid]);\r\n\r\n    const changeHandler = (event) => {\r\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators});\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({type: 'TOUCH'});\r\n    }\r\n\r\n    const element = props.element === 'input' ? \r\n        <input id={props.id} type={props.type} placeholder={props.placeholder} value={inputState.value} onChange={changeHandler} onBlur={touchHandler} /> \r\n        : \r\n        <textarea id={props.id} rows={props.rows || 3} value={inputState.value} onChange={changeHandler} onBlur={touchHandler} />;\r\n\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched ? 'form-control--invalid' : ''}`}>\r\n            <label htmlFor={props.id}>{props.label}</label>\r\n            { element }\r\n            { !inputState.isValid && inputState.isTouched ? <p>{props.errorMsg}</p> : ''}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import { useReducer, useCallback } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                \r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                        ...state.inputs,\r\n                        [action.inputId]: {\r\n                            value: action.value,\r\n                            isValid: action.isValid\r\n                        }\r\n                    },\r\n                isValid: formIsValid\r\n            }\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputFields, initialFormIsValid) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputFields,\r\n        isValid: initialFormIsValid\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            inputId: id,\r\n            value,\r\n            isValid\r\n        });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\n\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const filePickRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            fileIsValid = true;\r\n            setFile(pickedFile);\r\n            setIsValid(fileIsValid);\r\n        } else {\r\n            fileIsValid = false;\r\n            setIsValid(fileIsValid);\r\n        }\r\n\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickRef.current.click();\r\n    };\r\n\r\n    return (\r\n        <div className='form-control'>\r\n            <input id={props.id} style={{display: 'none'}} type='file' accept='.jpg,.png,.jpeg' ref={filePickRef} onChange={pickedHandler} />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className='image-upload__preview'>\r\n                    {previewUrl && <img src={previewUrl} alt='Preview' />}\r\n                    {!previewUrl && <p>Please pick an image.</p>}\r\n                </div>\r\n\r\n                <Button type='button' onClick={pickImageHandler}>PICK IMAGE</Button>\r\n            </div>\r\n            {!isValid && props.errorText}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\r\nimport AuthContext from '../../shared/context/auth-context';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\n\r\nimport './Auth.css';\r\n\r\nconst Auth = props => {\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    const [formState, inputHandler, setFormData] = useForm({\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    const [isLoginMode, setIsLoginMode] = useState(true);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n\r\n        if (isLoginMode) {\r\n            try {\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n                    'POST', \r\n                    JSON.stringify({\r\n                        email: formState.inputs.email.value,\r\n                        password: formState.inputs.password.value\r\n                    }), \r\n                    {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                );\r\n\r\n                console.log(responseData);\r\n\r\n                authCtx.login(responseData.userId, responseData.token);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            try {\r\n                const formData = new FormData();\r\n                formData.append('name', formState.inputs.name.value);\r\n                formData.append('email', formState.inputs.email.value);\r\n                formData.append('password', formState.inputs.password.value);\r\n                formData.append('image', formState.inputs.image.value);\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n                    'POST',\r\n                    formData\r\n                );\r\n\r\n                console.log(responseData);\r\n                authCtx.login(responseData.userId, responseData.token);\r\n            } catch (err) {\r\n                console.log(err.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    const switchModeHandler = () => {\r\n        if (!isLoginMode) {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: undefined,\r\n                image: undefined\r\n            }, (formState.inputs.email.isValid && formState.inputs.password.isValid))\r\n        } else {\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                },\r\n                image: {\r\n                    value: null,\r\n                    isValid: false\r\n                }\r\n            }, false);\r\n        }\r\n\r\n        setIsLoginMode(prevMode => !prevMode);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { error && <ErrorModal error={error} onClear={clearError} /> }\r\n            <Card className='authentication'>\r\n                { isLoading && <LoadingSpinner asOverlay />}\r\n                <h2>Login Required</h2>\r\n                <hr />\r\n                <form onSubmit={authSubmitHandler}>\r\n                    {\r\n                        !isLoginMode && (\r\n                            <Input\r\n                                id='name'\r\n                                type='text'\r\n                                element='input'\r\n                                label='Your Name'\r\n                                validators={[VALIDATOR_REQUIRE()]}\r\n                                errorMsg='Please enter a name.'\r\n                                onInput={inputHandler}\r\n                            />\r\n                        )\r\n                    }\r\n\r\n                    {\r\n                        !isLoginMode && (\r\n                            <ImageUpload center id='image' onInput={inputHandler} errorText='Please provide an image.' />\r\n                        )\r\n                    }\r\n\r\n                    <Input \r\n                        id='email'\r\n                        type='email'\r\n                        element='input'\r\n                        label='Email'\r\n                        initialValue={formState.inputs.email.value}\r\n                        initialValid={formState.inputs.email.isValid}\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorMsg='Please enter a valid email address.'\r\n                        onInput={inputHandler}\r\n                    />\r\n\r\n                    <Input \r\n                        id='password'\r\n                        type='password'\r\n                        element='input'\r\n                        label='Password'\r\n                        initialValue={formState.inputs.password.value}\r\n                        initialValid={formState.inputs.password.isValid}\r\n                        validators={[VALIDATOR_MINLENGTH(6)]}\r\n                        errorMsg='Please enter a valid password, at least 5 characters.'\r\n                        onInput={inputHandler}\r\n                    />\r\n                    \r\n                    <Button disabled={!formState.isValid}>{ !isLoginMode ? 'SIGNUP' : 'LOGIN'}</Button>\r\n                </form>\r\n\r\n                <Button inverse onClick={switchModeHandler}>SWITCH TO {!isLoginMode ? 'LOGIN' : 'SIGNUP'}</Button>\r\n            </Card>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Auth;"],"sourceRoot":""}