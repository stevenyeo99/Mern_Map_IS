{"version":3,"sources":["shared/context/auth-context.js","shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","userId","token","isLoggedIn","login","logout","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Backdrop","ReactDOM","createPortal","document","getElementById","logoutTimer","MainHeader","NavLinks","authCtx","useContext","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpiryDateTime","setTokenExpiryDateTime","setUserId","useCallback","expirationDateTime","Date","getTime","localStorage","setItem","JSON","stringify","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","userData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.9383ce81.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst AuthContext = createContext({\r\n    userId: null,\r\n    token: null,\r\n    isLoggedIn: false,\r\n    login: () => {},\r\n    logout: () => {}\r\n});\r\n\r\nexport default AuthContext;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState();\r\n    const [tokenExpiryDateTime, setTokenExpiryDateTime] = useState();\r\n    const [userId, setUserId] = useState();\r\n\r\n    const login = useCallback((userId, token, expirationDateTime) => {\r\n        setUserId(userId);\r\n        setToken(token);\r\n        const tokenExpiryDateTime = expirationDateTime || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n        setTokenExpiryDateTime(tokenExpiryDateTime);\r\n        localStorage.setItem('userData', JSON.stringify({\r\n            userId,\r\n            token,\r\n            tokenExpiryDateTime: tokenExpiryDateTime.toISOString()\r\n        }));\r\n    }, []);\r\n\r\n    const logout = useCallback((userId) => {\r\n        setUserId(null);\r\n        setToken(null);\r\n        setTokenExpiryDateTime(null);\r\n        localStorage.removeItem('userData');\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (token && tokenExpiryDateTime) {\r\n            const remainingTime = tokenExpiryDateTime.getTime() - new Date().getTime();\r\n            logoutTimer = setTimeout(logout, remainingTime);\r\n        } else {\r\n            clearTimeout(logoutTimer);\r\n        }\r\n    }, [token, logout, tokenExpiryDateTime]);\r\n\r\n    useEffect(() => {\r\n        const userData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n        if (userData && userData.token && (new Date(userData.tokenExpiryDateTime) > new Date())) {\r\n            login(userData.userId, userData.token, new Date(userData.tokenExpiryDateTime));\r\n        }\r\n    }, [login]);\r\n\r\n    return {\r\n        token,\r\n        userId,\r\n        login,\r\n        logout\r\n    };\r\n};","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return (\r\n        <header className='main-header'>\r\n            {\r\n                props.children\r\n            }\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default MainHeader;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport AuthContext from '../../context/auth-context';\r\nimport Button from '../FormElements/Button';\r\n\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    return (\r\n        <ul className='nav-links'>\r\n            <li>\r\n                <NavLink to='/' exact>ALL USERS</NavLink>\r\n            </li>\r\n            \r\n            { authCtx.isLoggedIn && (\r\n                    <li>\r\n                        <NavLink to={`/${authCtx.userId}/places`}>MY PLACES</NavLink>\r\n                    </li>\r\n                )\r\n            }\r\n\r\n            { authCtx.isLoggedIn && (\r\n                    <li>\r\n                        <NavLink to='/places/new'>NEW PLACE</NavLink>\r\n                    </li>\r\n                )\r\n            }\r\n\r\n            { !authCtx.isLoggedIn && (\r\n                    <li>\r\n                        <NavLink to='/auth'>AUTHENTICATE</NavLink>\r\n                    </li>\r\n                )\r\n            }\r\n\r\n            { authCtx.isLoggedIn && (\r\n                    <li>\r\n                        <Button onClick={authCtx.logout}>LOGOUT</Button>\r\n                    </li>\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n    const content = (\r\n        <CSSTransition in={props.show} timeout={200} classNames='slide-in-left' mountOnEnter unmountOnExit>\r\n            <aside className='side-drawer' onClick={props.onClick}>\r\n                {\r\n                    props.children\r\n                }\r\n            </aside>\r\n        </CSSTransition>\r\n    );\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\n\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n    const [ drawerIsOpen, setDrawerIsOpen ] = useState(false);\r\n\r\n    const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n    }\r\n\r\n    const closeDrawerHandler = () => {\r\n        setDrawerIsOpen(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { drawerIsOpen && <Backdrop onClick={openDrawerHandler} /> }\r\n\r\n            <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n                <nav className='main-navigation__drawer-nav'>\r\n                    <NavLinks />\r\n                </nav>\r\n            </SideDrawer>\r\n\r\n            <MainHeader>\r\n                <button className='main-navigation__menu-btn' onClick={setDrawerIsOpen}>\r\n                    <span/>\r\n                    <span/>\r\n                    <span/>\r\n                </button>\r\n                <h1 className='main-navigation__title'>\r\n                    <Link to='/'>YeoPlaces</Link>\r\n                </h1>\r\n                <nav className='main-navigation__header-nav'>\r\n                    <NavLinks />\r\n                </nav>\r\n            </MainHeader>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MainNavigation;","import React, { useState, useCallback, useEffect, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\nimport AuthContext from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const { token, userId, login, logout } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/places/new' exact>\n          <NewPlace />\n        </Route>\n        <Route path='/places/:placeId' exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to='/' />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/auth' exact>\n          <Auth />\n        </Route>\n        <Redirect to='/auth' />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn: !!token, userId, token, login, logout }}>\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense fallback={<div className='center'><LoadingSpinner /></div>}>{ routes }</Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}