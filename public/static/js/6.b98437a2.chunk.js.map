{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js","shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ErrorModal","props","onCancel","onClear","header","show","footer","onClick","ModalOverlay","content","className","style","headerClass","onSubmit","event","preventDefault","contentClass","children","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","console","log","fetch","signal","response","json","responseData","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","Card","Map","mapRef","center","zoom","map","window","google","maps","Marker","position","ref","i","PlaceItem","authCtx","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","useHistory","cancelDeleteWarningHandler","confirmDeleteWarningHandler","process","id","Authorization","token","onDelete","LoadingSpinner","asOverlay","address","Button","coordinates","inverse","danger","src","image","alt","title","description","isLoggedIn","creatorId","userId","to","PlaceList","items","length","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","places","fetchPlaces","placeId","prevPlaces","filter","prevPlace"],"mappings":"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","file":"static/js/6.b98437a2.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport BackDrop from '../UIElements/Backdrop';\r\n\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n\r\n            <form onSubmit={\r\n                props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n            }>\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    { props.children }\r\n                </div>\r\n\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    { props.footer }\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    );\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <React.Fragment>\r\n            { props.show && <BackDrop onClick={props.onCancel} /> }\r\n            <CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames='modal'>\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default Modal;","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeHttpRequest = useRef([]);\r\n\r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            setIsLoading(true);\r\n\r\n            const httpAbortCtrl = new AbortController();\r\n            activeHttpRequest.current.push(httpAbortCtrl);\r\n\r\n            console.log(activeHttpRequest);\r\n            console.log(activeHttpRequest.current);\r\n            console.log(body);\r\n\r\n            const response = await fetch(url, {\r\n                method,\r\n                headers,\r\n                body,\r\n                signal: httpAbortCtrl.signal\r\n            });\r\n\r\n            const responseData = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n\r\n            return responseData;\r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            setError(err.message || 'Error occur during call API.');\r\n            throw new Error(err.message);\r\n        }\r\n    }, []);\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequest.current.forEach(abortCtrl => {\r\n                abortCtrl.abort();\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return {\r\n        isLoading,\r\n        error,\r\n        sendRequest,\r\n        clearError\r\n    }\r\n};","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n    const mapRef = useRef();\r\n\r\n    const { center, zoom } = props;\r\n\r\n    useEffect(() => {\r\n        const map = new window.google.maps.Map(mapRef.current, {\r\n            center: center,\r\n            zoom: zoom\r\n        });\r\n\r\n        new window.google.maps.Marker({\r\n            position: center,\r\n            map: map\r\n        });\r\n    }, [center, zoom]);\r\n\r\n    return (\r\n        <div ref={mapRef} className={`map ${props.className}`} style={props.style}>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Map from '../../shared/components/UIElements/Map';\r\nimport AuthContext from '../../shared/context/auth-context';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\n\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = props => {\r\n    const authCtx = useContext(AuthContext);\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const history = useHistory();\r\n\r\n    const openMapHandler = () => setShowMap(true);\r\n\r\n    const closeMapHandler = () => setShowMap(false);\r\n\r\n    const showDeleteWarningHandler = () => setShowConfirmModal(true);\r\n\r\n    const cancelDeleteWarningHandler = () => setShowConfirmModal(false);\r\n\r\n    const confirmDeleteWarningHandler = async () => {\r\n        try {\r\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`, 'DELETE', null, {\r\n                Authorization: 'Bearer ' + authCtx.token\r\n            });\r\n\r\n            props.onDelete(props.id);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n\r\n        setShowConfirmModal(false);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onCancel={clearError} />\r\n\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n            <Modal \r\n                show={showMap} \r\n                onCancel={closeMapHandler} \r\n                header={props.address} \r\n                contentClass=\"place-item__modal-content\" \r\n                footerClass=\"place-item__modal-actions\" \r\n                footer={<Button onClick={closeMapHandler}>CLOSE</Button>} \r\n            >\r\n                <div className='map-container'>\r\n                    <Map center={props.coordinates} zoom={16} />\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                show={showConfirmModal}\r\n                onCancel={cancelDeleteWarningHandler}\r\n                header={'Are you sure to delete?'}\r\n                footerClass='place-item__modal-actions'\r\n                footer={\r\n                    <React.Fragment>\r\n                        <Button inverse onClick={cancelDeleteWarningHandler}>CANCEL</Button>\r\n                        <Button danger onClick={confirmDeleteWarningHandler}>DELETE</Button>\r\n                    </React.Fragment>\r\n                }\r\n            >\r\n                <p>\r\n                    Are you sure want to delete this place, once delete unable to undone the data.\r\n                </p>\r\n            </Modal>\r\n            \r\n            <li className='place-item'>\r\n                <Card className='place-item__content'>\r\n                    { isLoading && <LoadingSpinner asOverlay />}\r\n                    <div className='place-item__image'>\r\n                        <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n                    </div>\r\n                    <div className='place-item__info'>\r\n                        <h2>{props.title}</h2>\r\n                        <h3>{props.address}</h3>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className='place-item__actions'>\r\n                        <Button onClick={openMapHandler} inverse>VIEW ON MAP</Button>\r\n                        {\r\n                            authCtx.isLoggedIn && props.creatorId === authCtx.userId && (\r\n                                <React.Fragment>\r\n                                    <Button to={`/places/${props.id}`}>EDIT</Button>\r\n                                    <Button onClick={showDeleteWarningHandler} danger>DELETE</Button>\r\n                                </React.Fragment>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </Card>\r\n            </li>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PlaceItem;","import React from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = props => {\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className='place-list center'>\r\n                <Card>\r\n                    <h2>No places found, Maybe create one?</h2>\r\n                    <Button to='/places/new'>Share Place</Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className='place-list'>\r\n            {\r\n                props.items.map(place => (\r\n                    <PlaceItem \r\n                        key={place.id} id={place.id} \r\n                        image={place.image} title={place.title} \r\n                        description={place.description} address={place.address}\r\n                        creatorId={place.creator} coordinates={place.location} \r\n                        onDelete={props.onDeletePlace}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PlaceList;","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport AuthContext from '../../shared/context/auth-context';\r\n\r\nconst UserPlaces = props => {\r\n    const authCtx = useContext(AuthContext);\r\n    const [loadedPlaces, setLoadedPlaces] = useState([]);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(() => {\r\n        try {\r\n            const fetchPlaces = async () => {\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`, 'GET', null, {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: 'Bearer ' + authCtx.token\r\n                });\r\n\r\n                setLoadedPlaces(responseData.places);\r\n            };\r\n\r\n            fetchPlaces();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }, [sendRequest, userId]);\r\n\r\n    const placeDeletedHandler = (placeId) => {\r\n        setLoadedPlaces(prevPlaces => prevPlaces.filter(prevPlace => prevPlace.id !== placeId));\r\n    }; \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            { isLoading && <div className='center'><LoadingSpinner asOverlay /></div> }\r\n            { !isLoading && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} /> }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default UserPlaces;"],"sourceRoot":""}